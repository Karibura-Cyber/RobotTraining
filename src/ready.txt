#include <POP32.h>
int i = 1;

void setup() {
  oled.clear();
  oled.text(0,0,"READY");
  oled.show();

  waitSW_OK();
}

void loop() {
  if(analog(2) < 1000){                                 // ถ้าหุ่นยนต์วิ่งชนกับเส้นดำข้างหน้า
    switch(i){                                          // ให้ใช้ case ที่ i
      // ใส่ case ลงไปในนี้
      // case 1: ใส่คำสั่งการควบคุมหุ่นยนต์ที่นี่ break;
    }
    i++;                                                // ให้เพิ่มค่า i ครั้งละ 1 ( i = i+1 )
  }
  else if(analog(0) < 1000){ FD2(70, 30); }             // ถ้า sensor ซ้ายสุดเจอเส้นดำให้วิ่งตรงไปด้วยความเร็วข้างซ้ายที่ 70% และขวา 30%
  else if(analog(4) < 1000){ FD2(30, 70); }             // ถ้า sensor ซ้ายสุดเจอเส้นดำให้วิ่งตรงไปด้วยความเร็วข้างซ้ายที่ 30% และขวา 70%
  else{ FD(50); sleep(1); }                             // ถ้าหากไม่ใช่อะไรเลย ให้วิ่งตรงไปด้วยความเร็ว 50% ด้วยเวลา 1 ms


  // ### ชุดคำสั่งที่เป็น case จำเป็นจะต้องอยู่ในเงื่อนไขชุดเดียวกันโดยการใช้ if, else if และ else ###

}

void ss(int x){AO(); sleep(x);}                         // ฟังก์ชั่นสั่งให้หยุด โดยสามารถกำหนดระยะเวลาได้ EX: ss(100); หมายถึง สั่งหยุดเป็นเวลา 100 ms
void ff(int x){FD(50); sleep(x);}                       // ฟังก์ชั่นสั่งให้เดินหน้า โดยสามารถกำหนดระยะเวลาได้ EX: ff(100); หมายถึง สั่งเดินหน้าเป็นเวลา 100 ms
void bb(int x){BK(50); sleep(x);}                       // ฟังก์ชั่นสั่งให้ถอยหลัง โดยสามารถกำหนดระยะเวลาได้ EX: bb(100); หมายถึง สั่งถอยหลังเป็นเวลา 100 ms

void lineb(){                                           // ฟังก์ชั่นการถอยหลังเพื่อหุ่นยนต์ตั้งตรง สามารถดูคำอธิบายเพิ่มได้ที่ https://training.nhshop.tech/src/LineB.txt
  while(analog(5) > 1000 && analog(6) > 1000){
    BK(20); sleep(10);
    while(analog(5) < 1000 && analog(6) > 1000){
      BK2(0, 50); sleep(10);
      if(analog(5) < 1000 && analog(6) < 1000){break;}
    }
    while(analog(5) > 1000 && analog(6) < 1000){
      BK2(50, 0); sleep(10);
      if(analog(5) < 1000 && analog(6) < 1000){break;}
    }
  }
  AO(); sleep(100);
  FD(10); sleep(10);
}

void r90(){                             // ฟังก์ชั่นถอยและเลี้ยวขวา 90 องศา
  ss(100);                              // หยุดเป็นเวลา 100 ms        
  bb(200);                              // ถอยหลังเป็นเวลา 200 ms
  ss(100);                              // หยุดเป็นเวลา 100 ms
  SR(50); sleep(280);                   // สามารถปรับแต่งความเร็วและระยะเวลาได้ตามต้องการ
}

void l90(){                             // ฟังก์ชั่นถอยและเลี้ยวซ้าย 90 องศา
  ss(100);                              // หยุดเป็นเวลา 100 ms  
  bb(200);                              // ถอยหลังเป็นเวลา 200 ms
  ss(100);                              // หยุดเป็นเวลา 100 ms  
  SL(50); sleep(280);                   // สามารถปรับแต่งความเร็วและระยะเวลาได้ตามต้องการ
}

void rr90(){                            // ฟังก์ชั่นเลี้ยวขวา 90 องศาแบบไม่ถอย
  ss(100);                              // หยุดเป็นเวลา 100 ms
  SR(50); sleep(280);                   // สามารถปรับแต่งความเร็วและระยะเวลาได้ตามต้องการ
}

void ll90(){                            // ฟังก์ชั่นเลี้ยวซ้าย 90 องศาแบบไม่ถอย
  ss(100);                              // หยุดเป็นเวลา 100 ms
  SL(50); sleep(280);                   // สามารถปรับแต่งความเร็วและระยะเวลาได้ตามต้องการ
}

void shoot(){                         // ฟังกชั่นการปล่อยลูกบากศ์
  servo(1, 38); delay(200);           // สั่ง servo ช่องที่ 1 หมุนไปที่ 38 องศาระยะเวลา 200 ms *องศาในการหมุนควรปรับก่อนใช้จริง*
  servo(1, 100); delay(200);          // สั่ง servo ช่องที่ 1 หมุนไปที่ 100 องศาระยะเวลา 200 ms *องศาในการหมุนควรปรับก่อนใช้จริง*
}